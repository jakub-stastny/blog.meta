#!/usr/bin/env ruby

require_relative '../lib/repo.rb'

unless ARGV.length == 1 && Dir.exist?(ARGV.first)
  abort "Usage: #$0 [project-directory]"
end

PROJECT_ROOT   = ARGV.first
README_PATH    = File.join(PROJECT_ROOT, "README.org")
META_FILE_PATH = File.join(PROJECT_ROOT, "meta.yml")
INHERITED_PATH = File.expand_path("../..", __FILE__)
README_TEMPLATE_PATH = File.join(INHERITED_PATH, "README.org.erb")

unless File.exist?(META_FILE_PATH)
  abort "File #{META_FILE_PATH} is missing"
end

begin
  repo = Repo.build(File.read(META_FILE_PATH), project_name: File.basename(PROJECT_ROOT))
  repo.validate
rescue ValidationError => error
  abort error.message
end

puts <<~EOF
  Generating with the following context:

  project: #{`tput setaf 7`}#{repo.context[:project_name]}#{`tput sgr0`}
  language: #{`tput setaf 7`}#{repo.context[:language]}#{`tput sgr0`}
  description: #{`tput setaf 7`}#{repo.context[:description]}#{`tput sgr0`}

  And full description:

  #{`tput setaf 7`}#{repo.context[:full_description]}#{`tput sgr0`}
EOF

result = repo.result(File.read(README_TEMPLATE_PATH))
File.open(README_PATH, 'w') do |file|
  file.puts(result)
end
